@using OfficeQuotes.Core.Models
@inject OfficeQuotesFullData OfficeQuotesFullData
@inject Random Random

@if (!Small)
{
    <BSCard CardType="@CardType.Group" class="character-quotes">
        <BSCard>
            <BSCard CardType="CardType.Image" VerticalAlignment="VerticalAlignment.Top" src="img/dwight_portrait.jpg" alt="Portrait of Dwight" />
            <BSCard CardType="CardType.Body">
                <BSCard CardType="CardType.Title">Dwight</BSCard>
                <BSCard CardType="CardType.Subtitle">@DwightQuote.Episode</BSCard>
                <BSCard CardType="CardType.Text">@DwightQuote.Quote.Text</BSCard>
            </BSCard>
        </BSCard>
        <BSCard>
            <BSCard CardType="CardType.Image" VerticalAlignment="VerticalAlignment.Top" src="img/michael_portrait.jpg" alt="Portrait of Michael" />
            <BSCard CardType="CardType.Body">
                <BSCard CardType="CardType.Title">Michael</BSCard>
                <BSCard CardType="CardType.Subtitle">@MichaelQuote.Episode</BSCard>
                <BSCard CardType="CardType.Text">@MichaelQuote.Quote.Text</BSCard>
            </BSCard>
        </BSCard>
        <BSCard>
            <BSCard CardType="CardType.Image" VerticalAlignment="VerticalAlignment.Top" src="img/creed_portrait.jpg" alt="Portrait of Creed" />
            <BSCard CardType="CardType.Body">
                <BSCard CardType="CardType.Title">Creed</BSCard>
                <BSCard CardType="CardType.Subtitle">@CreedQuote.Episode</BSCard>
                <BSCard CardType="CardType.Text">@CreedQuote.Quote.Text</BSCard>
            </BSCard>
        </BSCard>
    </BSCard>
}
else
{
    var randomNum = Random.Next(4);
    if (randomNum == 0)
    {
        <BSCard>
            <BSCard CardType="CardType.Image" VerticalAlignment="VerticalAlignment.Top" src="img/dwight_portrait.jpg" alt="Portrait of Dwight" />
            <BSCard CardType="CardType.Body">
                <BSCard CardType="CardType.Title">Dwight</BSCard>
                <BSCard CardType="CardType.Subtitle">@DwightQuote.Episode</BSCard>
                <BSCard CardType="CardType.Text">@DwightQuote.Quote.Text</BSCard>
            </BSCard>
        </BSCard>
    }
    else if (randomNum == 1)
    {
        <BSCard>
            <BSCard CardType="CardType.Image" VerticalAlignment="VerticalAlignment.Top" src="img/michael_portrait.jpg" alt="Portrait of Michael" />
            <BSCard CardType="CardType.Body">
                <BSCard CardType="CardType.Title">Michael</BSCard>
                <BSCard CardType="CardType.Subtitle">@MichaelQuote.Episode</BSCard>
                <BSCard CardType="CardType.Text">@MichaelQuote.Quote.Text</BSCard>
            </BSCard>
        </BSCard>
    }
    else
    {
        <BSCard>
            <BSCard CardType="CardType.Image" VerticalAlignment="VerticalAlignment.Top" src="img/creed_portrait.jpg" alt="Portrait of Creed" />
            <BSCard CardType="CardType.Body">
                <BSCard CardType="CardType.Title">Creed</BSCard>
                <BSCard CardType="CardType.Subtitle">@CreedQuote.Episode</BSCard>
                <BSCard CardType="CardType.Text">@CreedQuote.Quote.Text</BSCard>
            </BSCard>
        </BSCard>
    }
}

@code{
    [Parameter]
    public bool Small { get; set; }
    private FullQuoteInfo DwightQuote { get; set; }
    private FullQuoteInfo MichaelQuote { get; set; }
    private FullQuoteInfo CreedQuote { get; set; }

    protected override void OnInitialized()
    {
        var dwightQuotes = OfficeQuotesFullData.FullQuoteInfoList.Where(x => x.Quote.Character.Contains("Dwight", StringComparison.InvariantCultureIgnoreCase)).ToArray();
        DwightQuote = dwightQuotes[Random.Next(dwightQuotes.Length)];

        var michaelQuotes = OfficeQuotesFullData.FullQuoteInfoList.Where(x => x.Quote.Character.Contains("Michael", StringComparison.InvariantCultureIgnoreCase)).ToArray();
        MichaelQuote = michaelQuotes[Random.Next(michaelQuotes.Length)];

        var creedQuotes = OfficeQuotesFullData.FullQuoteInfoList.Where(x => x.Quote.Character.Contains("Creed", StringComparison.InvariantCultureIgnoreCase)).ToArray();
        CreedQuote = creedQuotes[Random.Next(creedQuotes.Length)];
    }

}